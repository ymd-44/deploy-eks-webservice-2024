name: Deploiement App service web via EKS (prod)
on:
  push:
    branches: [ "main" ]


env:
  AWS_REGION: us-east-1
  EKS_CLUSTER_NAME: eks-devops24
  MY_NAMESPACE: projet-devops

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Code Checkout
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.24.0' # latest stable
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION}}

    - name: Update kube config
      run: aws eks update-kubeconfig --name ${{env.EKS_CLUSTER_NAME}} --region ${{env.AWS_REGION}}


    - name: Vérifier si le namespace "projet-devops" existe
      run: kubectl get namespace | grep ${{env.MY_NAMESPACE}}
      if: {{ always() }}
    
    - name: Nettoyage de la config Kubernetes existante
      run: kubectl delete namespace ${{env.MY_NAMESPACE}}
      if: steps.Verify_Namespace_Exists.outputs.exitCode != 0

    - name: Vérifier si le namespace "projet-devops" existe sinon le créer
      run: kubectl get namespace | grep ${{env.MY_NAMESPACE}} || kubectl create namespace ${{env.MY_NAMESPACE}}
      if: ${{ always() }}


    # - name: Créer le namespace "projet-devops" si non existe
    #   run: kubectl create namespace projet-devops
    #   if: steps.Verify_Namespace_Exists.outputs.exitCode != 0

    # - name: Supprimer la configuration Kubernetes existante (si présente)
    #   run: kubectl delete -k ./
    
    - name: Deploy to EKS
      run: |
        kubectl apply -k ./